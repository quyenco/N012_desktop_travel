import React, { useEffect, useState } from "react";
import { getCustomers, deleteCustomer } from "../../api/customer/index";
import { useNavigate } from "react-router-dom";
import { Pagination } from "antd";

const Customer = () => {
  const [customers, setCustomers] = useState<any[]>([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [customersPerPage] = useState(10); // S·ªë l∆∞·ª£ng kh√°ch h√†ng m·ªói trang
  const navigate = useNavigate();

  // üéØ L·∫•y danh s√°ch kh√°ch h√†ng
  useEffect(() => {
    const fetchCustomers = async () => {
      const data = await getCustomers();
      if (data) setCustomers(data);
    };
    fetchCustomers();
  }, []);

  // üóëÔ∏è X√≥a kh√°ch h√†ng
  const handleDeleteCustomer = async (id: number) => {
    if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a kh√°ch h√†ng n√†y kh√¥ng?")) {
      const res = await deleteCustomer(id);
      if (res) setCustomers(customers.filter((c) => c.id !== id));
    }
  };

  // Chuy·ªÉn ƒë·∫øn chi ti·∫øt kh√°ch h√†ng
  const handleSelectCustomer = (id: number) => {
    navigate(`/dashboard/customers/${id}`);
  };

  // üéØ T√≠nh to√°n kh√°ch h√†ng hi·ªán t·∫°i c·ªßa trang
  const indexOfLastCustomer = currentPage * customersPerPage;
  const indexOfFirstCustomer = indexOfLastCustomer - customersPerPage;
  const currentCustomers = customers.slice(indexOfFirstCustomer, indexOfLastCustomer);

  // üõ†Ô∏è X·ª≠ l√Ω khi ƒë·ªïi trang
  const handlePageChange = (page: number) => {
    setCurrentPage(page);
  };


  // if (loading) return <div className="text-center p-4">‚è≥ ƒêang t·∫£i d·ªØ li·ªáu...</div>;

  return (
    <div>
      <h1 className="text-2xl font-bold mb-4">Qu·∫£n l√Ω kh√°ch h√†ng</h1>

      {/* Danh s√°ch kh√°ch h√†ng */}
      {customers.length > 0 ? (
        <>
          <table className="table-auto w-full border-collapse border border-gray-300">
            <thead>
              <tr className="bg-gray-200">
                <th className="border p-2">#</th>
                <th className="border p-2">T√™n</th>
                <th className="border p-2">Ng√†y sinh</th>
                <th className="border p-2">Email</th>
                <th className="border p-2">ƒê·ªãa ch·ªâ</th>
                <th className="border p-2">Gi·ªõi t√≠nh</th>
              </tr>
            </thead>
            <tbody>
              {currentCustomers.map((customer, index) => (
                <tr
                  key={customer.id}
                  className="hover:bg-gray-100 cursor-pointer"
                  onClick={() => handleSelectCustomer(customer.customerId)}
                >
                  <td className="border p-2 text-center">
                    {indexOfFirstCustomer + index + 1}
                  </td>
                  <td className="border p-2">{customer.fullName}</td>
                  <td className="border p-2">{customer.dob}</td>
                  <td className="border p-2">{customer.user.email}</td>
                  <td className="border p-2">{customer.address}</td>
                  <td className="border p-2">{customer.gender ? "Nam" : "N·ªØ"}</td>
                </tr>
              ))}
            </tbody>
          </table>

          {/* Ph√¢n trang */}
          <Pagination
            current={currentPage}
            pageSize={customersPerPage}
            total={customers.length}
            onChange={handlePageChange}
            className="mt-4 text-center"
          />
        </>
      ) : (
        <div className="text-center p-4 text-red-500">‚ùå Kh√¥ng c√≥ kh√°ch h√†ng n√†o!</div>
      )}
    </div>
  );
};

export default Customer;
